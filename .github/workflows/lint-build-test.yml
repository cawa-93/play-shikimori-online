# name of your github action
name: Lint, build and test
# this will help you specify where to run
on:
  push:
    branches:
      - v2.0.x
    paths-ignore:
      - '.github/**'
      - '**/*.md'
      - '**/*.txt'
  pull_request:
    branches:
      - v2.0.x
    paths-ignore:
      - '.github/**'
      - '**/*.md'
      - '**/*.txt'
# this is where the magic happens, each job happens in parallel btw
jobs:
  lint:
    name: Lint code
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@master
        with:
          ref: v2.0.x

      - uses: actions/setup-node@master
        with:
          node-version: 12.13

      - name: Get npm cache directory
        id: npm-cache-setup
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v1
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-setup.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint -- --no-fix

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [macOS-latest, windows-latest]

    steps:
      - uses: actions/checkout@master
        with:
          ref: v2.0.x

      - uses: actions/setup-node@master
        with:
          node-version: 12.13


      - name: Get npm cache directory
        id: npm-cache-setup
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v1
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-setup.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci


      - name: Build on ${{ matrix.os }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          CSC_LINK: ${{ secrets[ format( '{0}_CSC_LINK', runner.os) ] }}
          CSC_KEY_PASSWORD: ${{ secrets[ format( '{0}_CSC_KEY_PASSWORD', runner.os) ] }}
        run: npm run electron:build

      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}-build
          path: dist_electron

#      - name: Test on ${{ matrix.os }}
#        env:
#          OS: ${{ matrix.os }}
#        run: npm test

